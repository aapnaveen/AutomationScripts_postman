<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8086" doc:name="HTTP Request Configuration"/>
    <flow name="postman_test_pocFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/test" doc:name="HTTP" />
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <logger message="#[json:fruit]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="inputString" value="#[json:fruit]" doc:name="Variable"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.inputString == 'Apple']">
                <set-payload value="{  &quot;Response&quot;: {   &quot;Staus&quot;: &quot;Success&quot;,   &quot;Message&quot;: &quot;Input string is APPLE&quot;  } }" mimeType="application/json" doc:name="Set Payload"/>

            </when>
            <otherwise>
                <set-payload value="{  &quot;Response&quot;: {   &quot;Staus&quot;: &quot;Failure&quot;,   &quot;Message&quot;: &quot;Input String is not APPLE&quot;  } }" mimeType="application/json" doc:name="Set Payload"/>

            </otherwise>
        </choice>
    </flow>
</mule>